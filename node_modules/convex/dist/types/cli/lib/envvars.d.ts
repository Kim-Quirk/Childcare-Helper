import { Context } from "./context";
declare const FRAMEWORKS: readonly ["create-react-app", "Next.js", "Vite", "Remix"];
export declare type Framework = (typeof FRAMEWORKS)[number];
export declare function offerToWriteToEnv(ctx: Context, type: "dev" | "prod", value: string, saveUrl?: "yes" | "no" | "ask"): Promise<void>;
declare type WriteConfig = {
    envFile: string;
    type: string;
    envVar: string;
    oldValue?: string;
} | null;
export declare function askAboutWritingToEnv(ctx: Context, type: "dev" | "prod", value: string | null, saveUrl?: "yes" | "no" | "ask"): Promise<WriteConfig>;
export declare function writeToEnv(ctx: Context, writeConfig: WriteConfig, value: string): Promise<void>;
export declare function logProvisioning(ctx: Context, writeConfig: WriteConfig, type: "dev" | "prod", url: string): void;
export declare function logConfiguration(ctx: Context, writeConfig: WriteConfig, type: "dev" | "prod", url: string): void;
export declare function suggestedEnvVarName(ctx: Context): Promise<{
    detectedFramework?: Framework;
    envVar: string;
}>;
export declare function buildEnvironment(): string | boolean;
export {};
//# sourceMappingURL=envvars.d.ts.map