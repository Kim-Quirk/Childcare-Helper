{
  "version": 3,
  "sources": ["../../../src/bundler/index.ts"],
  "sourcesContent": ["import { parse as parseAST } from \"@babel/parser\";\nimport path from \"path\";\nimport chalk from \"chalk\";\nimport esbuild from \"esbuild\";\nimport { Filesystem } from \"./fs.js\";\nimport { wasmPlugin } from \"./wasm.js\";\nexport { nodeFs, RecordingFs } from \"./fs.js\";\nexport type { Filesystem } from \"./fs.js\";\n\nexport const actionsDir = \"actions\";\n\n// Returns a generator of { isDir, path } for all paths\n// within dirPath in some topological order (not including\n// dirPath itself).\nexport function* walkDir(\n  fs: Filesystem,\n  dirPath: string\n): Generator<{ isDir: boolean; path: string }, void, void> {\n  for (const dirEntry of fs.listDir(dirPath)) {\n    const childPath = path.join(dirPath, dirEntry.name);\n    if (dirEntry.isDirectory()) {\n      yield { isDir: true, path: childPath };\n      yield* walkDir(fs, childPath);\n    } else if (dirEntry.isFile()) {\n      yield { isDir: false, path: childPath };\n    }\n  }\n}\n\n// Convex specific module environment.\ntype ModuleEnvironment = \"node\" | \"isolate\";\n\nexport interface Bundle {\n  path: string;\n  source: string;\n  sourceMap?: string;\n  environment: ModuleEnvironment;\n}\n\nexport class BundleError extends Error {}\n\ntype EsBuildResult = esbuild.BuildResult & {\n  outputFiles: esbuild.OutputFile[];\n};\n\nasync function doEsbuild(\n  fs: Filesystem,\n  dir: string,\n  entryPoints: string[],\n  generateSourceMaps: boolean,\n  platform: esbuild.Platform,\n  chunksFolder: string\n): Promise<EsBuildResult> {\n  try {\n    const result = await esbuild.build({\n      entryPoints,\n      bundle: true,\n      platform: platform,\n      format: \"esm\",\n      target: \"esnext\",\n      outdir: \"out\",\n      outbase: dir,\n      plugins: [wasmPlugin],\n      write: false,\n      sourcemap: generateSourceMaps,\n      splitting: true,\n      chunkNames: path.join(chunksFolder, \"[hash]\"),\n      treeShaking: true,\n      minify: false,\n      keepNames: true,\n      metafile: true,\n    });\n\n    for (const [relPath, input] of Object.entries(result.metafile!.inputs)) {\n      // TODO: esbuild outputs paths prefixed with \"(disabled)\"\" when bundling our internal\n      // udf-system package. The files do actually exist locally, though.\n      if (\n        relPath.indexOf(\"(disabled):\") !== -1 ||\n        relPath.startsWith(\"wasm-binary:\") ||\n        relPath.startsWith(\"wasm-stub:\")\n      ) {\n        continue;\n      }\n      const absPath = path.resolve(relPath);\n      const st = fs.stat(absPath);\n      if (st.size !== input.bytes) {\n        throw new Error(\n          `Bundled file ${absPath} changed right after esbuild invocation`\n        );\n      }\n      fs.registerPath(absPath, st);\n    }\n    return result;\n  } catch (err) {\n    throw new BundleError(`esbuild failed: ${(err as any).toString()}`);\n  }\n}\n\nexport async function bundle(\n  fs: Filesystem,\n  dir: string,\n  entryPoints: string[],\n  generateSourceMaps: boolean,\n  platform: esbuild.Platform,\n  chunksFolder = \"_deps\"\n): Promise<Bundle[]> {\n  const result = await doEsbuild(\n    fs,\n    dir,\n    entryPoints,\n    generateSourceMaps,\n    platform,\n    chunksFolder\n  );\n  if (result.errors.length) {\n    for (const error of result.errors) {\n      console.log(chalk.red(`esbuild error: ${error.text}`));\n    }\n    throw new BundleError(\"esbuild failed\");\n  }\n  for (const warning of result.warnings) {\n    console.log(chalk.yellow(`esbuild warning: ${warning.text}`));\n  }\n  const sourceMaps = new Map();\n  const modules: Bundle[] = [];\n  const environment = platform === \"node\" ? \"node\" : \"isolate\";\n  for (const outputFile of result.outputFiles) {\n    const relPath = path.relative(path.normalize(\"out\"), outputFile.path);\n    if (path.extname(relPath) === \".map\") {\n      sourceMaps.set(relPath, outputFile.text);\n      continue;\n    }\n    const posixRelPath = relPath.split(path.sep).join(path.posix.sep);\n    modules.push({ path: posixRelPath, source: outputFile.text, environment });\n  }\n  for (const module of modules) {\n    const sourceMapPath = module.path + \".map\";\n    const sourceMap = sourceMaps.get(sourceMapPath);\n    if (sourceMap) {\n      module.sourceMap = sourceMap;\n    }\n  }\n  return modules;\n}\n\nexport async function bundleSchema(fs: Filesystem, dir: string) {\n  return bundle(fs, dir, [path.resolve(dir, \"schema.ts\")], true, \"browser\");\n}\n\nexport async function entryPoints(\n  fs: Filesystem,\n  dir: string,\n  verbose: boolean\n): Promise<string[]> {\n  const entryPoints = [];\n  for (const { isDir, path: fpath } of walkDir(fs, dir)) {\n    if (isDir) {\n      continue;\n    }\n    const relPath = path.relative(dir, fpath);\n    const base = path.parse(fpath).base;\n\n    const log = (line: string) => {\n      if (verbose) {\n        console.log(line);\n      }\n    };\n\n    if (relPath.startsWith(\"_deps\" + path.sep)) {\n      throw new Error(\n        `The path \"${fpath}\" is within the \"_deps\" directory, which is reserved for dependencies. Please move your code to another directory.`\n      );\n    } else if (relPath.startsWith(\"_generated\" + path.sep)) {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base.startsWith(\".\")) {\n      log(chalk.yellow(`Skipping dotfile ${fpath}`));\n    } else if (base === \"README.md\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"_generated.ts\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"schema.ts\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base.includes(\".test.\")) {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (base === \"tsconfig.json\") {\n      log(chalk.yellow(`Skipping ${fpath}`));\n    } else if (relPath.includes(\" \")) {\n      log(chalk.yellow(`Skipping ${relPath} because it contains a space`));\n    } else if (base.endsWith(\".d.ts\")) {\n      log(chalk.yellow(`Skipping ${fpath} declaration file`));\n    } else {\n      log(chalk.green(`Preparing ${fpath}`));\n      entryPoints.push(fpath);\n    }\n  }\n  return entryPoints;\n}\n\n// A fallback regex in case we fail to parse the AST.\nexport const useNodeDirectiveRegex = /^\\s*(\"|')use node(\"|');?\\s*$/;\n\nfunction hasUseNodeDirective(\n  fs: Filesystem,\n  fpath: string,\n  verbose: boolean\n): boolean {\n  // Do a quick check for the exact string. If it doesn't exist, don't\n  // bother parsing.\n  const source = fs.readUtf8File(fpath);\n  if (source.indexOf(\"use node\") === -1) {\n    return false;\n  }\n\n  // We parse the AST here to extract the \"use node\" declaration. This is more\n  // robust than doing a regex. We only use regex as a fallback.\n  try {\n    const ast = parseAST(source, {\n      // parse in strict mode and allow module declarations\n      sourceType: \"module\",\n\n      // esbuild supports jsx and typescript by default. Allow the same plugins\n      // here too.\n      plugins: [\"jsx\", \"typescript\"],\n    });\n    return ast.program.directives.map(d => d.value.value).includes(\"use node\");\n  } catch (error: any) {\n    // Given that we have failed to parse, we are most likely going to fail in\n    // the esbuild step, which seem to return better formatted error messages.\n    // We don't throw here and fallback to regex.\n    let lineMatches = false;\n    for (const line of source.split(\"\\n\")) {\n      if (line.match(useNodeDirectiveRegex)) {\n        lineMatches = true;\n        break;\n      }\n    }\n\n    if (verbose) {\n      // Log that we failed to parse in verbose node if we need this for debugging.\n      console.warn(\n        `Failed to parse ${fpath}. Use node is set to ${lineMatches} based on regex. Parse error: ${error.toString()}.`\n      );\n    }\n\n    return lineMatches;\n  }\n}\n\nexport function mustBeIsolate(relPath: string): boolean {\n  // Check if the path without extension matches any of the static paths.\n  return [\"http\", \"crons\", \"schema\"].includes(relPath.replace(/\\.[^/.]+$/, \"\"));\n}\n\nfunction determineEnvironment(\n  fs: Filesystem,\n  dir: string,\n  fpath: string,\n  verbose: boolean\n): ModuleEnvironment {\n  const relPath = path.relative(dir, fpath);\n\n  const useNodeDirectiveFound = hasUseNodeDirective(fs, fpath, verbose);\n  if (useNodeDirectiveFound) {\n    if (mustBeIsolate(relPath)) {\n      throw new BundleError(\n        `\"use node\" directive is not allowed for ${relPath}.`\n      );\n    }\n    return \"node\";\n  }\n\n  const actionsPrefix = actionsDir + path.sep;\n  if (relPath.startsWith(actionsPrefix)) {\n    throw new Error(\n      `${relPath} is in /actions subfolder but has no \"use node\"; directive. You can now define actions in any folder and indicate they should run in node by adding \"use node\" directive. /actions is a deprecated way to choose Node.js environment, and we require \"use node\" for all files within that folder to avoid unexpected errors during the migration. See https://docs.convex.dev/functions/actions for more details`\n    );\n  }\n\n  return \"isolate\";\n}\n\nexport async function entryPointsByEnvironment(\n  fs: Filesystem,\n  dir: string,\n  verbose: boolean\n) {\n  const isolate = [];\n  const node = [];\n  for (const entryPoint of await entryPoints(fs, dir, verbose)) {\n    const environment = determineEnvironment(fs, dir, entryPoint, verbose);\n    if (environment === \"node\") {\n      node.push(entryPoint);\n    } else {\n      isolate.push(entryPoint);\n    }\n  }\n\n  return { isolate, node };\n}\n"],
  "mappings": "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",
  "names": ["import_fs", "path", "entryPoints", "esbuild", "chalk", "module", "parseAST"]
}
