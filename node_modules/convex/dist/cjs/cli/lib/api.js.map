{
  "version": 3,
  "sources": ["../../../../src/cli/lib/api.ts"],
  "sourcesContent": ["import chalk from \"chalk\";\nimport { bigBrainAPI, bigBrainAPIMaybeThrows } from \"./utils.js\";\nimport { Context } from \"./context.js\";\n\nexport type DeploymentType = \"dev\" | \"prod\";\n\nexport type Project = {\n  id: string;\n  name: string;\n  slug: string;\n  active_instances: number;\n};\n\ntype AdminKey = string;\ninterface AuthorizeArgs {\n  projectSlug: string;\n  teamSlug: string;\n  deploymentType: DeploymentType;\n}\n\nexport async function getUrlAndAdminKey(\n  ctx: Context,\n  projectSlug: string,\n  teamSlug: string,\n  deploymentType: DeploymentType\n): Promise<{\n  url: string;\n  adminKey: AdminKey;\n}> {\n  const authorizeArgs: AuthorizeArgs = {\n    projectSlug,\n    teamSlug,\n    deploymentType,\n  };\n  const data = await bigBrainAPI(\n    ctx,\n    \"POST\",\n    \"deployment/authorize\",\n    authorizeArgs\n  );\n  const adminKey = data.adminKey;\n  const url = data.url;\n  if (adminKey === undefined || url === undefined) {\n    const msg = \"Unknown error during authorization: \" + JSON.stringify(data);\n    console.error(chalk.red(msg));\n    return await ctx.crash(1, \"transient\", new Error(msg));\n  }\n  return { adminKey, url };\n}\n\ntype DevDeployment = {\n  url: string;\n  adminKey: string;\n};\n\ntype DevDeploymentArgs = {\n  projectSlug: string;\n  teamSlug: string;\n  backendVersionOverride?: string;\n};\nexport async function getDevDeploymentMaybeThrows(\n  ctx: Context,\n  args: DevDeploymentArgs\n): Promise<DevDeployment> {\n  return await bigBrainAPIMaybeThrows(ctx, \"PUT\", \"dev_deployment\", args);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,mBAAoD;AAmBpD,eAAsB,kBACpB,KACA,aACA,UACA,gBAIC;AACD,QAAM,gBAA+B;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,OAAO,UAAM;AAAA,IACjB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,WAAW,KAAK;AACtB,QAAM,MAAM,KAAK;AACjB,MAAI,aAAa,UAAa,QAAQ,QAAW;AAC/C,UAAM,MAAM,yCAAyC,KAAK,UAAU,IAAI;AACxE,YAAQ,MAAM,aAAAA,QAAM,IAAI,GAAG,CAAC;AAC5B,WAAO,MAAM,IAAI,MAAM,GAAG,aAAa,IAAI,MAAM,GAAG,CAAC;AAAA,EACvD;AACA,SAAO,EAAE,UAAU,IAAI;AACzB;AAYA,eAAsB,4BACpB,KACA,MACwB;AACxB,SAAO,UAAM,qCAAuB,KAAK,OAAO,kBAAkB,IAAI;AACxE;",
  "names": ["chalk"]
}
