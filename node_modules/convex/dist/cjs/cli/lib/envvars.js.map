{
  "version": 3,
  "sources": ["../../../../src/cli/lib/envvars.ts"],
  "sourcesContent": ["/**\n * Help the developer store the CONVEX_URL environment variable.\n */\nimport chalk from \"chalk\";\nimport * as dotenv from \"dotenv\";\n\nimport inquirer from \"inquirer\";\nimport { Context, logFinishedStep } from \"./context\";\nimport { loadPackageJson } from \"./utils\";\n\nconst FRAMEWORKS = [\"create-react-app\", \"Next.js\", \"Vite\", \"Remix\"] as const;\nexport type Framework = (typeof FRAMEWORKS)[number];\n\nexport async function offerToWriteToEnv(\n  ctx: Context,\n  type: \"dev\" | \"prod\",\n  value: string,\n  saveUrl: \"yes\" | \"no\" | \"ask\" = \"ask\" as const\n) {\n  const write = await askAboutWritingToEnv(ctx, type, value, saveUrl);\n  await writeToEnv(ctx, write, value);\n  if (write) {\n    const { envFile, envVar } = write;\n    logFinishedStep(\n      ctx,\n      `Saved ${type} deployment URL as ${envVar} to ${envFile}`\n    );\n  }\n}\n\ntype WriteConfig = {\n  envFile: string;\n  type: string;\n  envVar: string;\n  oldValue?: string;\n} | null;\n\nexport async function askAboutWritingToEnv(\n  ctx: Context,\n  type: \"dev\" | \"prod\",\n  value: string | null,\n  saveUrl: \"yes\" | \"no\" | \"ask\" = \"ask\" as const\n): Promise<WriteConfig> {\n  if (saveUrl === \"no\") {\n    return null;\n  }\n\n  const { detectedFramework, envVar } = await suggestedEnvVarName(ctx);\n\n  if (detectedFramework === \"Remix\" && type === \"prod\") {\n    return null;\n  }\n\n  const { envFile, existing } =\n    type === \"dev\"\n      ? suggestedDevEnvFile(ctx, detectedFramework)\n      : suggestedProdEnvFile(ctx);\n\n  if (existing) {\n    const config = dotenv.parse(ctx.fs.readUtf8File(envFile));\n\n    const matching = Object.keys(config).filter(key => EXPECTED_NAMES.has(key));\n    if (matching.length > 1) {\n      console.error(\n        chalk.yellow(\n          `Found multiple CONVEX_URL environment variables in ${envFile} so cannot update automatically.`\n        )\n      );\n      return null;\n    }\n    if (matching.length === 1) {\n      const [envVar, oldValue] = [matching[0], config[matching[0]]];\n      if (oldValue === value) {\n        return null;\n      }\n      if (Object.values(config).filter(v => v === oldValue).length !== 1) {\n        chalk.yellow(`Can't safely modify ${envFile}, please edit manually.`);\n        return null;\n      }\n      if (\n        saveUrl === \"yes\" ||\n        (await promptAboutSaving(type, envVar, envFile))\n      ) {\n        return { envFile, type, envVar, oldValue };\n      }\n      return null;\n    }\n  }\n\n  if (saveUrl === \"yes\" || (await promptAboutSaving(type, envVar, envFile))) {\n    return { envFile, type, envVar };\n  }\n\n  return null;\n}\n\nasync function promptAboutSaving(\n  type: \"dev\" | \"prod\",\n  envVar: string,\n  envFile: string\n) {\n  return (\n    await inquirer.prompt([\n      {\n        type: \"confirm\",\n        name: \"updateEnvFile\",\n        message: `Save ${type} deployment URL as ${envVar} to ${envFile}?`,\n        default: true,\n      },\n    ])\n  ).updateEnvFile;\n}\n\nexport async function writeToEnv(\n  ctx: Context,\n  writeConfig: WriteConfig,\n  value: string\n) {\n  if (!writeConfig) {\n    return;\n  }\n\n  const { envFile, envVar, oldValue } = writeConfig;\n\n  if (oldValue !== undefined) {\n    const modified = ctx.fs.readUtf8File(envFile).replace(oldValue, value);\n    ctx.fs.writeUtf8File(envFile, modified);\n  } else {\n    const doesFileExist = ctx.fs.exists(envFile);\n    if (doesFileExist) {\n      const orig = ctx.fs.readUtf8File(envFile);\n      const modified = `${orig}\\n${envVar}=\"${value}\"\\n`;\n      ctx.fs.writeUtf8File(envFile, modified);\n    } else {\n      const contents = `${envVar}=\"${value}\"\\n`;\n      ctx.fs.writeUtf8File(envFile, contents);\n    }\n  }\n}\n\nexport function logProvisioning(\n  ctx: Context,\n  writeConfig: WriteConfig,\n  type: \"dev\" | \"prod\",\n  url: string\n) {\n  if (writeConfig) {\n    const { envVar, envFile } = writeConfig;\n    logFinishedStep(\n      ctx,\n      `Provisioned ${type} deployment and saved its URL as ${envVar} to ${envFile}`\n    );\n  } else {\n    logFinishedStep(\n      ctx,\n      `Provisioned ${type} deployment at ${chalk.bold(url)}`\n    );\n  }\n}\n\nexport function logConfiguration(\n  ctx: Context,\n  writeConfig: WriteConfig,\n  type: \"dev\" | \"prod\",\n  url: string\n) {\n  if (writeConfig) {\n    const { envVar, envFile } = writeConfig;\n    logFinishedStep(\n      ctx,\n      `Configured ${type} deployment and saved its URL as ${envVar} to ${envFile}`\n    );\n  } else {\n    logFinishedStep(ctx, `Configured ${type} deployment at ${chalk.bold(url)}`);\n  }\n}\n\nexport async function suggestedEnvVarName(ctx: Context): Promise<{\n  detectedFramework?: Framework;\n  envVar: string;\n}> {\n  // no package.json, that's fine, just guess\n  if (!ctx.fs.exists(\"package.json\")) {\n    return {\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  const packages = await loadPackageJson(ctx);\n\n  // Is it create-react-app?\n  const isCreateReactApp = \"react-scripts\" in packages;\n  if (isCreateReactApp) {\n    return {\n      detectedFramework: \"create-react-app\",\n      envVar: \"REACT_APP_CONVEX_URL\",\n    };\n  }\n\n  const isNextJs = \"next\" in packages;\n  if (isNextJs) {\n    return {\n      detectedFramework: \"Next.js\",\n      envVar: \"NEXT_PUBLIC_CONVEX_URL\",\n    };\n  }\n\n  const isRemix = \"@remix-run/dev\" in packages;\n  if (isRemix) {\n    return {\n      detectedFramework: \"Remix\",\n      envVar: \"CONVEX_URL\",\n    };\n  }\n\n  // Vite is a dependency of a lot of things; vite appearing in dependencies is not a strong indicator.\n  const isVite = \"vite\" in packages;\n  if (isVite) {\n    return {\n      detectedFramework: \"Vite\",\n      envVar: \"VITE_CONVEX_URL\",\n    };\n  }\n\n  return {\n    envVar: \"CONVEX_URL\",\n  };\n}\n\nfunction suggestedProdEnvFile(ctx: Context): {\n  existing: boolean;\n  envFile: string;\n} {\n  // The most prod-looking env file that exists, or .env\n  if (ctx.fs.exists(\".env.production\")) {\n    return {\n      existing: true,\n      envFile: \".env.production\",\n    };\n  }\n  if (ctx.fs.exists(\".env\")) {\n    return {\n      existing: true,\n      envFile: \".env\",\n    };\n  }\n  return {\n    existing: false,\n    envFile: \".env\",\n  };\n}\n\nfunction suggestedDevEnvFile(\n  ctx: Context,\n  framework?: Framework\n): {\n  existing: boolean;\n  envFile: string;\n} {\n  // If a .env.local file exists, that's unequivocally the right file\n  if (ctx.fs.exists(\".env.local\")) {\n    return {\n      existing: true,\n      envFile: \".env.local\",\n    };\n  }\n\n  // Remix is on team \"don't commit the .env file,\" so .env is for dev.\n  if (framework === \"Remix\") {\n    return {\n      existing: ctx.fs.exists(\".env\"),\n      envFile: \".env\",\n    };\n  }\n\n  // The most dev-looking env file that exists, or .env.local\n  return {\n    existing: ctx.fs.exists(\".env.local\"),\n    envFile: \".env.local\",\n  };\n}\n\nconst EXPECTED_NAMES = new Set([\n  \"CONVEX_URL\",\n  \"NEXT_PUBLIC_CONVEX_URL\",\n  \"VITE_CONVEX_URL\",\n  \"REACT_APP_CONVEX_URL\",\n]);\n\nexport function buildEnvironment(): string | boolean {\n  return process.env.VERCEL\n    ? \"Vercel\"\n    : process.env.NETLIFY\n    ? \"Netlify\"\n    : false;\n}\n"],
  "mappings": "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",
  "names": ["chalk", "envVar", "inquirer"]
}
