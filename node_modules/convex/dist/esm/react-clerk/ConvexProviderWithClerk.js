"use strict";
import { useAuth } from "@clerk/clerk-react";
import React from "react";
import { useCallback, useMemo } from "react";
import { ConvexProviderWithAuth } from "../react/ConvexAuthState.js";
export function ConvexProviderWithClerk({
  children,
  client
}) {
  return /* @__PURE__ */ React.createElement(ConvexProviderWithAuth, { client, useAuth: useAuthFromClerk }, children);
}
function useAuthFromClerk() {
  const { isLoaded, isSignedIn, getToken } = useAuth();
  const fetchAccessToken = useCallback(
    async ({ forceRefreshToken }) => {
      try {
        return getToken({ template: "convex", skipCache: forceRefreshToken });
      } catch (error) {
        return null;
      }
    },
    []
  );
  return useMemo(
    () => ({
      isLoading: !isLoaded,
      isAuthenticated: isSignedIn ?? false,
      fetchAccessToken
    }),
    [isLoaded, isSignedIn, fetchAccessToken]
  );
}
//# sourceMappingURL=ConvexProviderWithClerk.js.map
