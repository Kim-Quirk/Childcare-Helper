{
  "version": 3,
  "sources": ["../../../../src/server/impl/actions_impl.ts"],
  "sourcesContent": ["import { convexToJson, jsonToConvex, Value } from \"../../values/index.js\";\nimport { version } from \"../../index.js\";\nimport { performAsyncSyscall } from \"./syscall.js\";\nimport { parseArgs } from \"../../common/index.js\";\n\nexport function setupActionCalls(requestId: string) {\n  return {\n    runQuery: async (\n      name: string,\n      args?: Record<string, Value>\n    ): Promise<any> => {\n      const queryArgs = parseArgs(args);\n      const syscallArgs = {\n        name,\n        args: [convexToJson(queryArgs)],\n        version,\n        requestId,\n      };\n      const result = await performAsyncSyscall(\"actions/query\", syscallArgs);\n      return jsonToConvex(result);\n    },\n    runMutation: async (\n      name: string,\n      args?: Record<string, Value>\n    ): Promise<any> => {\n      const mutationArgs = parseArgs(args);\n      const syscallArgs = {\n        name,\n        args: [convexToJson(mutationArgs)],\n        version,\n        requestId,\n      };\n      const result = await performAsyncSyscall(\"actions/mutation\", syscallArgs);\n      return jsonToConvex(result);\n    },\n    runAction: async (\n      name: string,\n      args?: Record<string, Value>\n    ): Promise<any> => {\n      const actionArgs = parseArgs(args);\n      const syscallArgs = {\n        name,\n        args: [convexToJson(actionArgs)],\n        version,\n        requestId,\n      };\n      const result = await performAsyncSyscall(\"actions/action\", syscallArgs);\n      return jsonToConvex(result);\n    },\n  };\n}\n"],
  "mappings": ";AAAA,SAAS,cAAc,oBAA2B;AAClD,SAAS,eAAe;AACxB,SAAS,2BAA2B;AACpC,SAAS,iBAAiB;AAEnB,gBAAS,iBAAiB,WAAmB;AAClD,SAAO;AAAA,IACL,UAAU,OACR,MACA,SACiB;AACjB,YAAM,YAAY,UAAU,IAAI;AAChC,YAAM,cAAc;AAAA,QAClB;AAAA,QACA,MAAM,CAAC,aAAa,SAAS,CAAC;AAAA,QAC9B;AAAA,QACA;AAAA,MACF;AACA,YAAM,SAAS,MAAM,oBAAoB,iBAAiB,WAAW;AACrE,aAAO,aAAa,MAAM;AAAA,IAC5B;AAAA,IACA,aAAa,OACX,MACA,SACiB;AACjB,YAAM,eAAe,UAAU,IAAI;AACnC,YAAM,cAAc;AAAA,QAClB;AAAA,QACA,MAAM,CAAC,aAAa,YAAY,CAAC;AAAA,QACjC;AAAA,QACA;AAAA,MACF;AACA,YAAM,SAAS,MAAM,oBAAoB,oBAAoB,WAAW;AACxE,aAAO,aAAa,MAAM;AAAA,IAC5B;AAAA,IACA,WAAW,OACT,MACA,SACiB;AACjB,YAAM,aAAa,UAAU,IAAI;AACjC,YAAM,cAAc;AAAA,QAClB;AAAA,QACA,MAAM,CAAC,aAAa,UAAU,CAAC;AAAA,QAC/B;AAAA,QACA;AAAA,MACF;AACA,YAAM,SAAS,MAAM,oBAAoB,kBAAkB,WAAW;AACtE,aAAO,aAAa,MAAM;AAAA,IAC5B;AAAA,EACF;AACF;",
  "names": []
}
